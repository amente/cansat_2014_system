/*-------------------------------------------------------
* Copyright (C) 2011 Digi International, All Rights Reserved.
*
* This software is provided as instructional material without charge 
* by Digi International for use by its employees and customers
* subject to the following terms.
*
* PERMISSION
* Permission is hereby granted, free of charge, to any person obtaining 
* a copy of this software, to deal with it without restriction, 
* including without limitation the rights to use, copy,  modify, merge, publish, 
* distribute, sublicense, and/or sell copies of it, and to permit persons to 
* whom it is furnished to do so, provided the above copyright notice 
* and this permission notice are included in all derived works
* and the use of this software is restricted to Digi products.
*
* WARRANTY
* THIS SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
* OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
* FITNESS FOR A PARTICULAR PURPOSE, OR NONINFRINGEMENT.  
*
* LIABILITY
* IN NO EVENT SHALL DIGI INTERNATIONAL BE LIABLE FOR ANY CLAIM, DAMAGES, 
* OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, 
* ARISING FROM, OUT OF, OR IN CONNECTION WITH THE SOFTWARE, OR THE USE 
* OR OTHER DEALINGS WITH THE SOFTWARE.
*
* REQUEST FOR IMPROVEMENTS
* If you have suggestions for improvements, or source code which corrects,
* enhances, or extends the functionality of this software, please forward
* them to the Tech Support group in the Lindon, Utah office 
* of Digi International addressed to the attention of 'Linus'.
*-------------------------------------------------------*/


NAMES END /* CodeWarrior will pass all the needed files to the linker by command line. But here you may add your own files too. */

SEGMENTS /* Here all RAM/ROM areas of the device are listed. Used in PLACEMENT below. */
    Z_RAM                    =  READ_WRITE   0x0080 TO 0x00FF;
    LOW_RAM                  =  READ_WRITE   0x0100 TO 0x01FF;        /* Low RAM, previously used for flash routines */
    SHARED_RAM               =  NO_INIT      0x0200 TO 0x0215;        /* Used to send data between bootloader and application */
    HIGH_RAM                 =  READ_WRITE   0x0216 TO 0x087F;        /* The rest of RAM */

    /* Application areas */
    APP_RESERVED             =  READ_ONLY    0x8000 TO 0x83FF;        /* 1KB storage for app - never touched by BL */
    APP_VER_DATA             =  READ_ONLY    0x8400 TO 0x841F;
    APP_ROM                  =  READ_ONLY    0x8420 TO 0xF1BB;
    APP_VERSION              =  READ_ONLY    0xF1BC TO 0xF1BF;        /* 4 byte pointer to app version string */
    APP_IVT                  =  READ_ONLY    0xF1C0 TO 0xF1FD;        /* Application Interrupt Vector Table */
    APP_START                =  READ_ONLY    0xF1FE TO 0xF1FF;        /* Application start address */

    /* Bootloader (BL) areas */
    FLASH_ROM                =  READ_ONLY    0xF200 TO 0xF2EF;        /* Flash routines that get copied to RAM */
    BOOTLOADER               =  READ_ONLY    0xF2F0 TO 0xFFA9;        /* Bootloader ROM area */
    BL_VERSION               =  READ_ONLY    0xFFAA TO 0xFFAD;        /* 4 byte pointer to BL version number */

END

PLACEMENT 
    SHARED_DATA            INTO SHARED_RAM;

    _DATA_ZEROPAGE,                                 /* zero page variables */
    MY_ZEROPAGE            INTO Z_RAM;

    FAR_RAM,                                        /* non-zero page variables */                       
    DEFAULT_RAM            INTO HIGH_RAM, LOW_RAM;
    APPLICATION_VERSION    INTO APP_VER_DATA;

    _PRESTART,                                
    STARTUP,                   /* startup data structures */    
    ROM_VAR,                   /* constant variables */
    STRINGS,                   /* string literals */      
    VIRTUAL_TABLE_SEGMENT,     /* C++ virtual table segment */
    DEFAULT_ROM,
    COPY                   INTO APP_ROM;            /* copy down information: how to initialize variables */

END

STACKSIZE 0x1a0

/* Interrupt vectors are defined in irq_vectors.c */
